---
import SideDrawerLayout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import formatDate from "../../utils/formatDate";
import calcReadTime from "../../utils/calcReadTime";

export async function getStaticPaths() {
  const blogEntries = await getCollection("posts");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<script>
  const headings = document.querySelectorAll(
    ".prose :is(h1, h2, h3, h4, h5, h6)"
  );

  headings.forEach((heading) => {
    const id = (heading as HTMLElement).innerText
      .toLowerCase()
      .replace(/ /g, "-");
    heading.id = id;

    heading.classList.add(
      ...["cursor-pointer", "flex", "items-center", "my-4", "relative"]
    );

    const linkEl = document.createElement("div");
    linkEl.classList.add(
      ...[
        "opacity-0",
        "hover:opacity-50",
        "transition-opacity",
        "ml-2",
        "flex-grow",
        // "w-full",
      ]
    );
    linkEl.innerHTML = `<svg class="w-8"  viewBox="0 0 24 24">
      <path
        fill="currentColor"
        d="M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z"
      />
    </svg>`;
    const copiedEl = document.createElement("div");
    copiedEl.classList.add(...["opacity-0", "transition-opacity"]);
    copiedEl.innerHTML = `<div class="text-sm text-poppins">Copied!</div>`;
    heading.appendChild(linkEl);
    heading.appendChild(copiedEl);

    (heading as HTMLElement).onclick = () => {
      navigator.clipboard.writeText(window.location.href + "#" + id);

      copiedEl.classList.remove("opacity-0");
      setTimeout(() => {
        copiedEl.classList.add("opacity-0");
      }, 1000);
    };
  });
</script>

<SideDrawerLayout title="Blog - Zach Moore">
  <main class="m-auto max-w-4xl p-4 mt-8">
    <div
      class="my-4 w-full title-section flex flex-col justify-between flex-wrap items-center"
    >
      <div class="w-full">
        <h1 class="text-8xl font-bold title text-primary">
          {entry.data.title}
        </h1>

        <div class="w-full flex justify-start items-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>

          <span class="text-sm ml-2">{calcReadTime(entry.body)} Min Read</span>
        </div>
      </div>

      <div class="w-full opacity-60 text-xs my-2 flex justify-end items-center">
        <div class="flex flex-wrap items-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-4"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"
            ></path>
          </svg>

          <span class="text-xs mr-4 ml-2">{formatDate(entry.data.pubDate)}</span
          >
        </div>
        <div class="flex flex-wrap items-center">
          <span class="mr-1">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
              ></path>
            </svg>
          </span>
          <span class="mr-1">Filed Under</span>
          <div class="">
            {
              entry.data.tags.map((tag: string) => (
                <a href={`/tags/${tag}`}>
                  <span class="p-1 m-1 border-1 rounded-md border-secondary hover:border-primary hover:text-primary cursor-pointer capitalize">
                    {tag}
                  </span>
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
    <div class="prose w-full content my-8">
      <Content />
    </div>
  </main>
</SideDrawerLayout>

<style>
  .content {
    max-width: unset;
  }

  .title-section {
    min-height: 200px;
  }

  .prose {
    font-size: 14pt !important;
  }
</style>
