---
import calcReadTime from "../utils/calcReadTime";
import formatDate from "../utils/formatDate";

const { post } = Astro.props;
const link = `/posts/${post.slug}/`;

const openLink = `window.location.href = '${link}'`;
---

<a href={link}>
  <div
    id="blogcard"
    class="card lg:card-side bg-base-100 shadow-xl m-2 hover:bg-neutral cursor-pointer rounded-md"
    onclick={openLink}
  >
    <!-- {
      post.data.image && (
        <figure class="blog-card__img">
          <img src={post.data.image} alt="Album" style="width:100%" />
        </figure>
      )
    } -->
    <div class="card-body">
      <div>
        <h2 class="card-title title text-3xl">{post.data.title}</h2>
        <p>{post.data.description}</p>
      </div>
      <div class="card-actions justify-between items-center opacity-60 text-sm">
        <div class="flex justify-start items-center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>

          <span class="text-sm ml-2">{calcReadTime(post.body)} Min Read</span>
        </div>
        <!-- <div>{post.data.tags.map((tag: string) => `#${tag}`)}</div> -->
        <div
          class="w-full opacity-60 text-xs my-2 justify-end items-center hidden sm:flex"
        >
          <div class="flex flex-wrap items-center">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="w-4"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"
              ></path>
            </svg>

            <span class="text-xs mr-4 ml-2"
              >{formatDate(post.data.pubDate)}</span
            >
          </div>
          <div class="flex flex-wrap items-center">
            <span class="mr-1 flex">
              <span class="mr-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-4"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
                  ></path>
                </svg>
              </span>
              <span class="mr-1">Filed Under</span>
            </span>
            <div class="my-2">
              {
                post.data.tags.map((tag: string) => (
                  <a href={`/tags/${tag}`}>
                    <span class="p-1 m-1 border-1 rounded-md border-secondary hover:border-primary hover:text-primary cursor-pointer capitalize">
                      {tag}
                    </span>
                  </a>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</a>

<style>
  .blog-card__img {
    /* height: 200px;
    width: 200px;  */
    overflow: hidden;
    position: relative;
    object-fit: cover;
    object-position: center;
    filter: blur(1px);
  }

  .blog-card {
    width: 250px;
    height: 300px;
  }
</style>
